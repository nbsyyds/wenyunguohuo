{"remainingRequest":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\javaProject\\litemall-master\\litemall-admin\\src\\views\\mall\\category.vue?vue&type=template&id=6e5bc26f&scoped=true","dependencies":[{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\src\\views\\mall\\category.vue","mtime":1703663872000},{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}