{"remainingRequest":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\javaProject\\litemall-master\\litemall-admin\\src\\views\\profile\\notice.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\src\\views\\profile\\notice.vue","mtime":1703663872000},{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\javaProject\\litemall-master\\litemall-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxpc3ROb3RpY2UsIGNhdE5vdGljZSwgYmNhdE5vdGljZSwgcm1Ob3RpY2UsIGJybU5vdGljZSB9IGZyb20gJ0AvYXBpL3Byb2ZpbGUnCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9QYWdpbmF0aW9uJyAvLyBTZWNvbmRhcnkgcGFja2FnZSBiYXNlZCBvbiBlbC1wYWdpbmF0aW9uCmltcG9ydCBfIGZyb20gJ2xvZGFzaCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQWRtaW5Ob3RpY2UnLAogIGNvbXBvbmVudHM6IHsgUGFnaW5hdGlvbiB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsaXN0OiBbXSwKICAgICAgdG90YWw6IDAsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBsaXN0UXVlcnk6IHsKICAgICAgICBwYWdlOiAxLAogICAgICAgIGxpbWl0OiAyMCwKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgdHlwZTogJ3VucmVhZCcsCiAgICAgICAgc29ydDogJ2FkZF90aW1lJywKICAgICAgICBvcmRlcjogJ2Rlc2MnCiAgICAgIH0sCiAgICAgIG11bHRpcGxlU2VsZWN0aW9uOiBbXSwKICAgICAgbm90aWNlOiB7CiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIHNvdXJjZTogJycsCiAgICAgICAgY29udGVudDogJycsCiAgICAgICAgYWRkVGltZTogJycKICAgICAgfSwKICAgICAgbm90aWNlVmlzaWJsZTogZmFsc2UKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TGlzdCgpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgICAgbGlzdE5vdGljZSh0aGlzLmxpc3RRdWVyeSkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLmxpc3QgPSByZXNwb25zZS5kYXRhLmRhdGEubGlzdAogICAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEuZGF0YS50b3RhbAogICAgICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy5saXN0ID0gW10KICAgICAgICAgIHRoaXMudG90YWwgPSAwCiAgICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgICAgICB9KQogICAgfSwKICAgIGhhbmRsZUZpbHRlcigpIHsKICAgICAgdGhpcy5saXN0UXVlcnkucGFnZSA9IDEKICAgICAgdGhpcy5nZXRMaXN0KCkKICAgIH0sCiAgICBoYW5kbGVEZWxldGUocm93KSB7CiAgICAgIHJtTm90aWNlKHJvdykKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLiRub3RpZnkuc3VjY2Vzcyh7CiAgICAgICAgICAgIHRpdGxlOiAn5oiQ5YqfJywKICAgICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOmAmuefpeaIkOWKnycKICAgICAgICAgIH0pCiAgICAgICAgICB0aGlzLmdldExpc3QoKQogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKHJlc3BvbnNlID0+IHsKICAgICAgICAgIHRoaXMuJG5vdGlmeS5lcnJvcih7CiAgICAgICAgICAgIHRpdGxlOiAn5aSx6LSlJywKICAgICAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UuZGF0YS5lcnJtc2cKICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2UodmFsKSB7CiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24gPSB2YWwKICAgIH0sCiAgICBoYW5kbGVCYXRjaERlbGV0ZSgpIHsKICAgICAgaWYgKHRoaXMubXVsdGlwbGVTZWxlY3Rpb24ubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6K+36YCJ5oup6Iez5bCR5LiA5p2h6K6w5b2VJykKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBjb25zdCBpZHMgPSBbXQogICAgICBfLmZvckVhY2godGhpcy5tdWx0aXBsZVNlbGVjdGlvbiwgZnVuY3Rpb24oaXRlbSkgewogICAgICAgIGlkcy5wdXNoKGl0ZW0uaWQpCiAgICAgIH0pCiAgICAgIGJybU5vdGljZSh7IGlkczogaWRzIH0pCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy4kbm90aWZ5LnN1Y2Nlc3MoewogICAgICAgICAgICB0aXRsZTogJ+aIkOWKnycsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfmibnph4/liKDpmaTpgJrnn6XmiJDlip8nCiAgICAgICAgICB9KQogICAgICAgICAgdGhpcy5nZXRMaXN0KCkKICAgICAgICB9KQogICAgICAgIC5jYXRjaChyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLiRub3RpZnkuZXJyb3IoewogICAgICAgICAgICB0aXRsZTogJ+Wksei0pScsCiAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEuZXJybXNnCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlUmVhZChyb3cpIHsKICAgICAgY2F0Tm90aWNlKHJvdykKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLm5vdGljZSA9IHJlc3BvbnNlLmRhdGEuZGF0YQogICAgICAgICAgdGhpcy5ub3RpY2VWaXNpYmxlID0gdHJ1ZQogICAgICAgIH0pCiAgICB9LAogICAgYWZ0ZXJSZWFkKCkgewogICAgICB0aGlzLm5vdGljZVZpc2libGUgPSBmYWxzZQogICAgICB0aGlzLmdldExpc3QoKQogICAgfSwKICAgIGhhbmRsZUJhdGNoUmVhZCgpIHsKICAgICAgaWYgKHRoaXMubXVsdGlwbGVTZWxlY3Rpb24ubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6K+36YCJ5oup6Iez5bCR5LiA5p2h6K6w5b2VJykKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBjb25zdCBpZHMgPSBbXQogICAgICBfLmZvckVhY2godGhpcy5tdWx0aXBsZVNlbGVjdGlvbiwgZnVuY3Rpb24oaXRlbSkgewogICAgICAgIGlkcy5wdXNoKGl0ZW0uaWQpCiAgICAgIH0pCiAgICAgIGJjYXROb3RpY2UoeyBpZHM6IGlkcyB9KQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgIHRoaXMuJG5vdGlmeS5zdWNjZXNzKHsKICAgICAgICAgICAgdGl0bGU6ICfmiJDlip8nLAogICAgICAgICAgICBtZXNzYWdlOiAn5om56YeP6K6+572u6YCa55+l5bey6K+75oiQ5YqfJwogICAgICAgICAgfSkKICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2gocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgICAgdGl0bGU6ICflpLHotKUnLAogICAgICAgICAgICBtZXNzYWdlOiByZXNwb25zZS5kYXRhLmVycm1zZwogICAgICAgICAgfSkKICAgICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["notice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"notice.vue","sourceRoot":"src/views/profile","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <!-- 查询和其他操作 -->\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.title\" clearable class=\"filter-item\" style=\"width: 200px;\" :placeholder=\"$t('profile_notice.placeholder.filter_title')\" />\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">{{ $t('app.button.search') }}</el-button>\n    </div>\n\n    <div class=\"operator-container\">\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleBatchRead\">{{ $t('profile_notice.button.batch_read') }}</el-button>\n      <el-button class=\"filter-item\" type=\"danger\" icon=\"el-icon-delete\" @click=\"handleBatchDelete\">{{ $t('app.button.batch_delete') }}</el-button>\n    </div>\n\n    <el-tabs v-model=\"listQuery.type\" @tab-click=\"handleFilter\">\n      <el-tab-pane :label=\"$t('profile_notice.section.unread')\" name=\"unread\" />\n      <el-tab-pane :label=\"$t('profile_notice.section.read')\" name=\"read\" />\n      <el-tab-pane :label=\"$t('profile_notice.section.all')\" name=\"all\" />\n    </el-tabs>\n\n    <!-- 查询结果 -->\n    <el-table v-loading=\"listLoading\" :data=\"list\" :element-loading-text=\"$t('app.message.list_loading')\" fit highlight-current-row @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" />\n\n      <el-table-column align=\"center\" :label=\"$t('profile_notice.table.notice_title')\" prop=\"noticeTitle\" />\n\n      <el-table-column align=\"center\" :label=\"$t('profile_notice.table.add_time')\" prop=\"addTime\" width=\"180\" />\n\n      <el-table-column align=\"center\" :label=\"$t('profile_notice.table.read_time')\" prop=\"readTime\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.readTime ? 'success' : 'error' \">{{ $t(scope.row.readTime ? 'profile_notice.text.read' : 'profile_notice.text.unread') }}</el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column align=\"center\" :label=\"$t('profile_notice.table.actions')\" width=\"200\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleRead(scope.row)\">{{ $t('profile_notice.button.read') }}</el-button>\n          <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">{{ $t('app.button.delete') }}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"notice.title\" :visible.sync=\"noticeVisible\" center>\n      <el-divider content-position=\"left\">{{ $t('profile_notice.text.admin_time', { admin: notice.admin, time: notice.time }) }}</el-divider>\n      <div v-html=\"notice.content\" />\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"afterRead\">{{ $t('app.button.confirm') }}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listNotice, catNotice, bcatNotice, rmNotice, brmNotice } from '@/api/profile'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport _ from 'lodash'\n\nexport default {\n  name: 'AdminNotice',\n  components: { Pagination },\n  data() {\n    return {\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        title: '',\n        type: 'unread',\n        sort: 'add_time',\n        order: 'desc'\n      },\n      multipleSelection: [],\n      notice: {\n        title: '',\n        source: '',\n        content: '',\n        addTime: ''\n      },\n      noticeVisible: false\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      listNotice(this.listQuery)\n        .then(response => {\n          this.list = response.data.data.list\n          this.total = response.data.data.total\n          this.listLoading = false\n        })\n        .catch(() => {\n          this.list = []\n          this.total = 0\n          this.listLoading = false\n        })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    handleDelete(row) {\n      rmNotice(row)\n        .then(response => {\n          this.$notify.success({\n            title: '成功',\n            message: '删除通知成功'\n          })\n          this.getList()\n        })\n        .catch(response => {\n          this.$notify.error({\n            title: '失败',\n            message: response.data.errmsg\n          })\n        })\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val\n    },\n    handleBatchDelete() {\n      if (this.multipleSelection.length === 0) {\n        this.$message.error('请选择至少一条记录')\n        return\n      }\n      const ids = []\n      _.forEach(this.multipleSelection, function(item) {\n        ids.push(item.id)\n      })\n      brmNotice({ ids: ids })\n        .then(response => {\n          this.$notify.success({\n            title: '成功',\n            message: '批量删除通知成功'\n          })\n          this.getList()\n        })\n        .catch(response => {\n          this.$notify.error({\n            title: '失败',\n            message: response.data.errmsg\n          })\n        })\n    },\n    handleRead(row) {\n      catNotice(row)\n        .then(response => {\n          this.notice = response.data.data\n          this.noticeVisible = true\n        })\n    },\n    afterRead() {\n      this.noticeVisible = false\n      this.getList()\n    },\n    handleBatchRead() {\n      if (this.multipleSelection.length === 0) {\n        this.$message.error('请选择至少一条记录')\n        return\n      }\n      const ids = []\n      _.forEach(this.multipleSelection, function(item) {\n        ids.push(item.id)\n      })\n      bcatNotice({ ids: ids })\n        .then(response => {\n          this.$notify.success({\n            title: '成功',\n            message: '批量设置通知已读成功'\n          })\n          this.getList()\n        })\n        .catch(response => {\n          this.$notify.error({\n            title: '失败',\n            message: response.data.errmsg\n          })\n        })\n    }\n  }\n}\n</script>\n"]}]}